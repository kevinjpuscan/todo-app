{"version":3,"sources":["components/Wrapper.jsx","images/icon-moon.svg","images/icon-sun.svg","store/types/taskTypes.js","services/IdGenerator.js","components/InputTask.jsx","components/Header.jsx","components/TaskActions.jsx","images/icon-cross.svg","images/icon-check.svg","components/TaskElement.jsx","components/ListTask.jsx","services/filterTasks.js","components/Filters.jsx","components/Instruction.jsx","store/reducers/taskReducer.js","store/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapeer","children","className","ADD_TASK","REMOVE_TASK","UPDATE_TASK","REMOVE_COMPLETED_TASK","CHANGE_FILTER","CHANGE_TASKS_VISIBLE","REORDER_TASK","IdGenerator","uuidv4","idGenerador","connect","dispatch","handleAddTask","task","type","taskTypes","payload","useState","inputName","setInputName","saveTask","id","generate","name","status","onClick","onSubmit","event","preventDefault","placeholder","value","onChange","target","onKeyDown","key","Header","setDarkMode","darkMode","src","moon","alt","sun","state","totalTaskVisible","taskReducer","handleRemoveCompleted","taskAction","handleRemoveTask","handleUpdateTask","handleReorderTasks","idTaskOrigin","idTaskDestiny","taskStatus","handleClickUpdate","newTask","draggable","onDragStart","ev","dataTransfer","setData","onDrop","getData","onDragOver","check","cross","filterTask","tasks","undefined","filter","handleChangeTotalTaskVisible","tasksVisible","length","map","idx","handleFilterAll","handleFilterCompleted","handleFilterActive","Instruction","idGenerator","initialState","combineReducers","action","types","newTasks","taskOrigin","find","indexTaskOrigin","findIndex","splice","indexTaskDestiny","store","createStore","reducer","App","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,SAASA,EAAT,GAA6B,IAAXC,EAAU,EAAVA,SAC7B,OACI,qBAAKC,UAAU,UAAf,SAA0BD,ICJnB,UAA0B,sCCA1B,MAA0B,qC,OCA5BE,EAAS,WACTC,EAAY,cACZC,EAAY,cACZC,EAAsB,wBACtBC,EAAc,gBACdC,EAAqB,uBACrBC,EAAa,e,sBCEXC,E,mGAJP,OAAOC,kB,KCGXC,EAAY,IAAIF,EAwCpB,IAMeG,cAAQ,MANI,SAAAC,GACvB,MAAO,CACLC,cAAe,SAACC,GAAD,OACbF,EAAS,CAAEG,KAAMC,EAAoBC,QAASH,QAGvCH,EA5Cf,YAAoC,IAAhBE,EAAe,EAAfA,cAAe,EACFK,mBAAS,IADP,mBAC1BC,EAD0B,KAChBC,EADgB,KAO/B,SAASC,IACP,GAAe,KAAZF,EAAe,CAChB,IAAIL,EAAK,CAACQ,GAAGZ,EAAYa,WAAWC,KAAKL,EAAUM,QAAO,GAC1DZ,EAAcC,GACdM,EAAa,KAWjB,OACI,cAAC,EAAD,UACA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAc0B,QAASL,EAAtC,SACE,qBAAKrB,UAAU,mBAEf,sBAAM2B,SAAU,SAAAC,GAAQA,EAAMC,kBAA9B,SACE,uBAAOd,KAAK,OAAOO,GAAG,aAAaQ,YAAY,uBAC/CC,MAAOZ,EAAWa,SA3B5B,SAAsBJ,GAClBR,EAAaQ,EAAMK,OAAOF,QA2BpBG,UAhBY,SAAAN,GACA,UAAdA,EAAMO,KACRd,iBCjBK,SAASe,EAAT,GAAwC,IAAvBC,EAAsB,EAAtBA,YAAYC,EAAU,EAAVA,SAKxC,OACI,yBAAQtC,UAAU,SAAlB,UACA,cAAC,EAAD,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,QAAd,kBACA,sBAAKA,UAAU,0BAA0B0B,QATjD,WACIW,GAAaC,IAQT,UACE,qBAAKC,IAAKC,EAAMC,IAAI,YAAYnB,GAAG,cACnC,qBAAKiB,IAAKG,EAAKD,IAAI,YAAYnB,GAAG,qBAMhD,cAAC,EAAD,OChBA,IAYeX,eAZO,SAAAgC,GACpB,MAAO,CACLC,iBAAiBD,EAAME,YAAYD,qBAId,SAAChC,GACxB,MAAM,CACJkC,sBAAsB,kBAAIlC,EAAS,CAACG,KAAKgC,QAI9BpC,EAnBf,YAA+D,IAAzCmC,EAAwC,EAAxCA,sBAAsBF,EAAkB,EAAlBA,iBACxC,OAAO,sBAAK5C,UAAU,eAAf,UACP,sBAAKsB,GAAG,oBAAoBtB,UAAU,sBAAtC,UAA6D4C,EAA7D,YACA,qBAAK5C,UAAU,sBAAsB0B,QAASoB,EAA9C,mC,OCPW,MAA0B,uCCA1B,MAA0B,uCCmDzC,IAWenC,cAAQ,MAXI,SAAAC,GACzB,MAAO,CACLoC,iBAAkB,SAAC1B,GAAD,OAChBV,EAAS,CAAEG,KAAMC,EAAuBC,QAASK,KACnD2B,iBAAkB,SAACnC,GAAD,OAChBF,EAAS,CAAEG,KAAMC,EAAuBC,QAASH,KACnDoC,mBAAmB,SAACC,EAAaC,GAAd,OACjBxC,EAAS,CAACG,KAAKC,EAAuBC,QAAQ,CAACkC,eAAaC,uBAInDzC,EAvDf,YAAkF,IAA5DG,EAA2D,EAA3DA,KAAKkC,EAAsD,EAAtDA,iBAAiBC,EAAqC,EAArCA,iBAAiBC,EAAoB,EAApBA,mBACrDG,EAAWvC,EAAKW,OAAO,QAAQ,UAEnC,SAAS6B,IACP,IAAIC,EAAQ,eAAIzC,GAChByC,EAAQ9B,QAAQ8B,EAAQ9B,OACxBwB,EAAiBM,GAoBnB,OACI,sBAAKjC,GAAIR,EAAKQ,GAAItB,UAAW,gBAAgBqD,EAAYG,UAAU,OAAOC,YAX9E,SAAcC,GACZA,EAAGC,aAAaC,QAAQ,SAAUF,EAAGzB,OAAOX,KAUmDuC,OAPjG,SAAcH,GACZA,EAAG7B,iBACH,IAAIsB,EAAaO,EAAGC,aAAaG,QAAQ,UACzCZ,EAAmBC,EAAarC,EAAKQ,KAIwEyC,WAf/G,SAAmBL,GACjBA,EAAG7B,kBAcD,UACA,qBAAK7B,UAAU,sBAAsB0B,QAAS4B,EAA9C,SACE,qBAAKtD,UAAU,oBAAf,SACE,qBAAKuC,IAAKyB,EAAOvB,IAAI,mBAGzB,qBAAKzC,UAAU,oBAAoB0B,QAAS4B,EAA5C,SACE,sBAAMtD,UAAU,YAAhB,SAA6Bc,EAAKU,SAGpC,qBAAKxB,UAAU,sBAAsB0B,QA7BzC,WACEsB,EAAiBlC,EAAKQ,KA4BpB,SACE,qBAAMiB,IAAK0B,EAAOxB,IAAI,wBCrC5ByB,EAAW,I,+FCPJC,EAAM1C,GACT,YAAY2C,IAAT3C,EACQ0C,EAEJA,EAAME,QAAO,SAAAvD,GAAI,OAAEA,EAAKW,SAASA,S,MDiChD,IAaiBd,eAbO,SAAAgC,GACtB,MAAO,CACLwB,MAAOxB,EAAME,YAAYsB,MACzBE,OAAO1B,EAAME,YAAYwB,WAIF,SAAAzD,GACzB,MAAO,CACL0D,6BAA6B,SAAC1B,GAAD,OAAoBhC,EAAS,CAACG,KAAKC,EAA+BC,QAAQ2B,QAI1FjC,EAzCjB,YAA+D,IAA5CwD,EAA2C,EAA3CA,MAAME,EAAqC,EAArCA,OAAOC,EAA8B,EAA9BA,6BAE1BC,EAAaL,EAAWG,OAAOF,EAAME,GAGvC,OAFFC,EAA6BC,EAAaC,QAGpC,cAAC1E,EAAD,UAEIyE,EAAaC,OAAO,EAEpB,sBAAKxE,UAAU,kBAAf,UAEIuE,EAAaE,KAAI,SAAC3D,EAAK4D,GAAN,OACb,cAAC,EAAD,CAAuB5D,KAAMA,GAAX4D,MAG1B,cAAC,EAAD,OAGA,qBAAK1E,UAAU,cAAf,+BEVZ,IAceW,eAdO,SAACgC,GACnB,MAAM,CACF0B,OAAO1B,EAAME,YAAYwB,WAIR,SAACzD,GACtB,MAAM,CACF+D,gBAAgB,kBAAI/D,EAAS,CAACG,KAAKC,EAAwBC,aAAQmD,KACnEQ,sBAAsB,kBAAIhE,EAAS,CAACG,KAAKC,EAAwBC,SAAQ,KACzE4D,mBAAmB,kBAAIjE,EAAS,CAACG,KAAKC,EAAwBC,SAAQ,QAI/DN,EA5Bf,YAAoF,IAAlE0D,EAAiE,EAAjEA,OAAOQ,EAA0D,EAA1DA,mBAAmBF,EAAuC,EAAvCA,gBAAgBC,EAAuB,EAAvBA,sBAGxD,OACI,cAAC9E,EAAD,UACI,sBAAKE,UAAU,UAAf,UACI,qBAAKA,UAAS,sCAAqCoE,IAATC,EAAmB,SAAS,IAAM3C,QAASiD,EAArF,iBACA,qBAAK3E,UAAS,kCAAqC,IAATqE,EAAe,SAAS,IAAO3C,QAASmD,EAAlF,oBACA,qBAAK7E,UAAS,kCAAqC,IAATqE,EAAc,SAAS,IAAM3C,QAASkD,EAAhF,+BCVD,SAASE,IACpB,OACI,cAAChF,EAAD,UACI,qBAAKE,UAAU,cAAf,6C,mBCJR+E,EAAY,IAAIvE,EACdwE,EAAa,CACfb,MAAM,CAAC,CAAC7C,GAAGyD,EAAYxD,WAAWC,KAAK,oCAAoCC,QAAO,GAC9E,CAACH,GAAGyD,EAAYxD,WAAWC,KAAK,yBAAyBC,QAAO,GAChE,CAACH,GAAGyD,EAAYxD,WAAWC,KAAK,wBAAwBC,QAAO,GAC/D,CAACH,GAAGyD,EAAYxD,WAAWC,KAAK,kBAAkBC,QAAO,GACzD,CAACH,GAAGyD,EAAYxD,WAAWC,KAAK,oBAAoBC,QAAO,GAC3D,CAACH,GAAGyD,EAAYxD,WAAWC,KAAK,uCAAuCC,QAAO,IAClF4C,YAAOD,EACPxB,iBAAiB,GCRNqC,cAAgB,CAC7BpC,YDUyB,WAA8B,IAA7BF,EAA4B,uDAAtBqC,EAAaE,EAAS,uCACxD,OAAOA,EAAOnE,MACV,KAAKoE,EACD,OAAO,2BAAIxC,GAAX,IAAiBwB,MAAM,GAAD,mBAAKxB,EAAMwB,OAAX,CAAiBe,EAAOjE,YAElD,KAAKkE,EACD,IAAIC,EAASzC,EAAMwB,MAAME,QAAO,SAAAvD,GAAI,OAAEA,EAAKQ,KAAK4D,EAAOjE,WACvD,OAAO,2BAAI0B,GAAX,IAAiBwB,MAAMiB,IAE3B,KAAKD,EACD,IAAIC,EAASzC,EAAMwB,MAAMM,KAAI,SAAA3D,GACzB,OAAGA,EAAKQ,KAAK4D,EAAOjE,QAAQK,GACjB4D,EAAOjE,QAEXH,KAEX,OAAO,2BAAI6B,GAAX,IAAiBwB,MAAMiB,IAE3B,KAAKD,EACD,IAAIC,EAASzC,EAAMwB,MAAME,QAAO,SAAAvD,GAAI,OAAGA,EAAKW,UAC5C,OAAO,2BAAIkB,GAAX,IAAiBwB,MAAMiB,IAE3B,KAAKD,EACD,OAAO,2BAAIxC,GAAX,IAAiB0B,OAAOa,EAAOjE,UAEnC,KAAKkE,EACD,OAAO,2BAAIxC,GAAX,IAAiBC,iBAAiBsC,EAAOjE,UAE7C,KAAKkE,EAED,IAAIE,EAAW1C,EAAMwB,MAAMmB,MAAK,SAAAxE,GAAI,OAAEA,EAAKQ,KAAK4D,EAAOjE,QAAQkC,gBAC3DoC,EAAgB5C,EAAMwB,MAAMqB,WAAU,SAAA1E,GAAI,OAAEA,EAAKQ,KAAK4D,EAAOjE,QAAQkC,gBACrEiC,EAAS,YAAIzC,EAAMwB,OACvBiB,EAASK,OAAOF,EAAgB,GAEhC,IAAIG,EAAiBN,EAASI,WAAU,SAAA1E,GAAI,OAAEA,EAAKQ,KAAK4D,EAAOjE,QAAQmC,iBAIvE,OAFAgC,EAASK,OAAOC,EAAiB,EAAEL,GAE5B,2BAAI1C,GAAX,IAAiBwB,MAAMiB,IAE3B,QACI,OAAOzC,ME/CTgD,EAAQC,YAAYC,GAkCXC,MAhCf,WAAgB,IAAD,EACmB5E,oBAAS,GAD5B,mBACNoB,EADM,KACID,EADJ,KAEP0D,EAAYzD,EAAW,eAAiB,gBAG9C,SAAS0D,EAAYC,GACnB5D,EAAY4D,EAAGC,SAYjB,OATAC,qBAAU,WACR,IAAMF,EAAKG,OAAOC,WAAW,gCAG7B,OAFAJ,EAAGK,YAAYN,GACf3D,EAAY4D,EAAGC,SACR,WACLD,EAAGM,eAAeP,MAEnB,IAGD,8BACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,uBAAM3F,UAAW+F,EAAjB,UACE,cAAC3D,EAAD,CAAQC,YAAaA,EAAaC,SAAUA,IAC5C,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACwC,EAAD,YCxBK0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acffeb9b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Wrapeer({children}){\r\n    return(\r\n        <div className=\"wrapper\">{children}</div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export const ADD_TASK=\"ADD_TASK\";\r\nexport const REMOVE_TASK=\"REMOVE_TASK\";\r\nexport const UPDATE_TASK=\"UPDATE_TASK\";\r\nexport const REMOVE_COMPLETED_TASK=\"REMOVE_COMPLETED_TASK\";\r\nexport const CHANGE_FILTER=\"CHANGE_FILTER\";\r\nexport const CHANGE_TASKS_VISIBLE=\"CHANGE_TASKS_VISIBLE\";\r\nexport const REORDER_TASK=\"REORDER_TASK\";","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass IdGenerator{\r\n    generate(){\r\n        return uuidv4(); \r\n    }\r\n}\r\n\r\nexport default IdGenerator;","import React,{useState} from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\nimport IdGenerator from '../services/IdGenerator';\r\n\r\nlet idGenerador=new IdGenerator();\r\n\r\nfunction InputTask({handleAddTask}){\r\n    let [inputName,setInputName]=useState('');\r\n\r\n    function handleChange(event){\r\n        setInputName(event.target.value);\r\n    }\r\n\r\n    function saveTask(){\r\n      if(inputName!==\"\"){\r\n        let task={id:idGenerador.generate(),name:inputName,status:false}\r\n        handleAddTask(task);\r\n        setInputName('');\r\n      }\r\n    }\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.key === \"Enter\") {\r\n          saveTask();\r\n        }\r\n      };\r\n\r\n \r\n    return(\r\n        <Wrapper>\r\n        <div className=\"form-container\">\r\n          <div className=\"task-status\" onClick={saveTask}>\r\n            <div className=\"task-uncheck\" ></div>\r\n          </div>\r\n            <form onSubmit={event=>{event.preventDefault()}}>\r\n              <input type=\"text\" id=\"task-input\" placeholder=\"Create a new todo...\" \r\n              value={inputName} onChange={handleChange}\r\n              onKeyDown={handleKeyDown}/>\r\n            </form>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      handleAddTask: (task) =>\r\n        dispatch({ type: taskTypes.ADD_TASK, payload: task })\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(InputTask);","import React from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport moon from \"../images/icon-moon.svg\";\r\nimport sun from \"../images/icon-sun.svg\";\r\nimport InputTask from './InputTask';\r\n\r\n\r\n\r\nexport default function Header({setDarkMode,darkMode}){\r\n    function handleClickDarkMode() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n\r\n    return(\r\n        <header className=\"header\">\r\n        <Wrapper>\r\n          <div className=\"title-container\">\r\n            <h3 className=\"title\">TODO</h3>\r\n            <div className=\"icon-color-mode pointer\" onClick={handleClickDarkMode}>\r\n              <img src={moon} alt=\"icon moon\" id=\"icon-moon\"/> \r\n              <img src={sun} alt=\"icon moon\" id=\"icon-sun\"/>  \r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        \r\n    \r\n<InputTask />\r\n      </header>\r\n    )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as taskAction from '../store/types/taskTypes';\r\n\r\nfunction TaskActions({handleRemoveCompleted,totalTaskVisible}){\r\n    return(<div className=\"task-element\">\r\n    <div id=\"option-five-items\" className=\"task-detail pointer\">{totalTaskVisible} Items</div>\r\n    <div className=\"task-detail pointer\" onClick={handleRemoveCompleted}>clear Completed</div>\r\n  </div>)\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    totalTaskVisible:state.taskReducer.totalTaskVisible\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    handleRemoveCompleted:()=>dispatch({type:taskAction.REMOVE_COMPLETED_TASK})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskActions);\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from 'react';\r\nimport cross from \"../images/icon-cross.svg\";\r\nimport check from \"../images/icon-check.svg\";\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\n\r\n\r\nfunction TaskElement({task,handleRemoveTask,handleUpdateTask,handleReorderTasks}){\r\n    let taskStatus=task.status?'check':'uncheck';\r\n\r\n    function handleClickUpdate(){\r\n      let newTask={...task};\r\n      newTask.status=!newTask.status;\r\n      handleUpdateTask(newTask);\r\n    }\r\n    function handleClickRemove(){\r\n      handleRemoveTask(task.id);\r\n    }\r\n\r\n    function allowDrop(ev) {\r\n      ev.preventDefault();\r\n    }\r\n    \r\n    function drag(ev) {\r\n      ev.dataTransfer.setData(\"taskId\", ev.target.id);\r\n    }\r\n    \r\n    function drop(ev) {\r\n      ev.preventDefault();\r\n      let idTaskOrigin=ev.dataTransfer.getData(\"taskId\");\r\n      handleReorderTasks(idTaskOrigin,task.id);\r\n      \r\n    }\r\n    return (\r\n        <div id={task.id} className={\"task-element \"+taskStatus} draggable=\"true\" onDragStart={drag} onDrop={drop} onDragOver={allowDrop}>\r\n        <div className=\"task-status pointer\" onClick={handleClickUpdate}>\r\n          <div className=\"task-status__icon\" >\r\n            <img src={check} alt=\"icon check\"/>\r\n             </div>\r\n        </div>\r\n        <div className=\"task-main pointer\" onClick={handleClickUpdate}>\r\n          <span className=\"task-name\">{task.name}</span>\r\n        </div>\r\n        \r\n        <div className=\"task-delete pointer\" onClick={handleClickRemove}>\r\n          <img  src={cross} alt=\"icon delete\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleRemoveTask: (id) =>\r\n      dispatch({ type: taskTypes.REMOVE_TASK, payload: id }),\r\n    handleUpdateTask: (task) =>\r\n      dispatch({ type: taskTypes.UPDATE_TASK, payload: task }),\r\n    handleReorderTasks:(idTaskOrigin,idTaskDestiny)=>\r\n      dispatch({type:taskTypes.REORDER_TASK,payload:{idTaskOrigin,idTaskDestiny}})\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(TaskElement);","import React from 'react';\r\nimport TaskActions from './TaskActions';\r\nimport TaskElement from './TaskElement';\r\nimport Wrapeer from './Wrapper';\r\nimport { connect } from \"react-redux\";\r\nimport FilterTasks from '../services/filterTasks';\r\nimport * as taskTypes from '../store/types/taskTypes'; \r\n\r\nlet filterTask=new FilterTasks();\r\n\r\nfunction ListTask({tasks,filter,handleChangeTotalTaskVisible}){\r\n  \r\n  let tasksVisible=filterTask.filter(tasks,filter);\r\n  handleChangeTotalTaskVisible(tasksVisible.length);\r\n\r\n    return(\r\n        <Wrapeer>\r\n          {\r\n            tasksVisible.length>0?(\r\n\r\n            <div className=\"main__list-task\">\r\n            {\r\n                tasksVisible.map((task,idx)=>(\r\n                    <TaskElement key={idx} task={task}/>\r\n                ))\r\n            }\r\n            <TaskActions/>            \r\n          </div>\r\n            ):\r\n            <div className=\"tasks-empty\">\r\n              Add new Task\r\n            </div>\r\n          }\r\n        </Wrapeer>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.taskReducer.tasks,\r\n    filter:state.taskReducer.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n  return {\r\n    handleChangeTotalTaskVisible:(totalTaskVisible)=>dispatch({type:taskTypes.CHANGE_TASKS_VISIBLE,payload:totalTaskVisible})\r\n  }\r\n}\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(ListTask);","export default class FilterTasks{\r\n    filter(tasks,status){\r\n        if(status===undefined){\r\n            return tasks;\r\n        }   \r\n        return tasks.filter(task=>task.status===status);\r\n    }\r\n}","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\n\r\nfunction Filters({filter,handleFilterActive,handleFilterAll,handleFilterCompleted}){\r\n   \r\n    \r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"filters\">\r\n                <div className={`filter-element pointer ${filter===undefined?\"active\":\"\"}`} onClick={handleFilterAll}>All</div>\r\n                <div className={`filter-element pointer ${filter===false?\"active\":\"\"}`}  onClick={handleFilterActive}>Active</div>\r\n                <div className={`filter-element pointer ${filter===true?\"active\":\"\"}`} onClick={handleFilterCompleted}>Completed</div>\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{ \r\n        filter:state.taskReducer.filter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleFilterAll:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:undefined}),\r\n        handleFilterCompleted:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:true}),\r\n        handleFilterActive:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:false}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filters);","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\n\r\nexport default function Instruction(){\r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"instruction\">\r\n                Drag and drop to reorder list\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}","import IdGenerator from '../../services/IdGenerator';\r\nimport * as types from '../types/taskTypes';\r\nlet idGenerator=new IdGenerator();\r\nconst initialState={\r\n    tasks:[{id:idGenerator.generate(),name:\"Complete online javascript course\",status:true},\r\n        {id:idGenerator.generate(),name:\"Jog around the park 3x\",status:false},\r\n        {id:idGenerator.generate(),name:\"10 minutes meditation\",status:false},\r\n        {id:idGenerator.generate(),name:\"Read for 1 hour\",status:false},\r\n        {id:idGenerator.generate(),name:\"Pick up groceries\",status:false},\r\n        {id:idGenerator.generate(),name:\"Complete Todo App on Frontend Mentor\",status:false}],\r\n    filter:undefined,\r\n    totalTaskVisible:0\r\n}\r\n\r\nexport const taskReducer = (state=initialState,action)=>{\r\nswitch(action.type){\r\n    case types.ADD_TASK:{\r\n        return {...state,tasks:[...state.tasks,action.payload]};\r\n    }\r\n    case types.REMOVE_TASK:{\r\n        let newTasks=state.tasks.filter(task=>task.id!==action.payload);\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.UPDATE_TASK:{\r\n        let newTasks=state.tasks.map(task=>{\r\n            if(task.id===action.payload.id){\r\n                return action.payload\r\n            }\r\n            return task;\r\n        })\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.REMOVE_COMPLETED_TASK:{\r\n        let newTasks=state.tasks.filter(task=>!task.status);\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.CHANGE_FILTER:{\r\n        return {...state,filter:action.payload}\r\n    }\r\n    case types.CHANGE_TASKS_VISIBLE:{\r\n        return {...state,totalTaskVisible:action.payload}\r\n    }\r\n    case types.REORDER_TASK:{\r\n        \r\n        let taskOrigin=state.tasks.find(task=>task.id===action.payload.idTaskOrigin);\r\n        let indexTaskOrigin=state.tasks.findIndex(task=>task.id===action.payload.idTaskOrigin);\r\n        let newTasks=[...state.tasks];\r\n        newTasks.splice(indexTaskOrigin,1);\r\n        \r\n        let indexTaskDestiny=newTasks.findIndex(task=>task.id===action.payload.idTaskDestiny);\r\n\r\n        newTasks.splice(indexTaskDestiny,0,taskOrigin);\r\n\r\n        return {...state,tasks:newTasks}\r\n    }\r\n    default:{\r\n        return state;\r\n    }\r\n}\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport {taskReducer} from './taskReducer';\r\n\r\nexport default combineReducers({\r\n  taskReducer\r\n});","import {useState,useEffect} from \"react\";\nimport Header from './components/Header';\nimport ListTask from './components/ListTask';\nimport Filters from  './components/Filters';\nimport Instruction from './components/Instruction';\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducers\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\n  function changeMedia(mq){\n    setDarkMode(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  \n  return (\n    <div>\n      <Provider store={store}>\n        <main className={mainClass}>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode}/>\n          <ListTask />\n          <Filters/>\n          <Instruction />\n        </main>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}