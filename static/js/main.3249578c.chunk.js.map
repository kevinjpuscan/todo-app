{"version":3,"sources":["components/Wrapper.jsx","images/icon-moon.svg","images/icon-sun.svg","store/types/taskTypes.js","components/InputTask.jsx","components/Header.jsx","components/TaskActions.jsx","images/icon-cross.svg","images/icon-check.svg","components/TaskElement.jsx","components/ListTask.jsx","components/Filters.jsx","components/Instruction.jsx","store/reducers/taskReducer.js","store/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapeer","children","className","ADD_TASK","connect","dispatch","handleAddTask","task","type","taskTypes","payload","useState","inputName","setInputName","saveTask","id","name","state","onClick","onSubmit","event","preventDefault","placeholder","value","onChange","target","onKeyDown","key","Header","setDarkMode","darkMode","src","moon","alt","sun","TaskActions","TaskElement","taskStatus","status","draggable","check","cross","tasks","taskReducer","map","idx","Filters","Instruction","initialState","combineReducers","action","types","store","createStore","reducer","App","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3249578c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Wrapeer({children}){\r\n    return(\r\n        <div className=\"wrapper\">{children}</div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export const ADD_TASK=\"ADD_TASK\";\r\nexport const REMOVE_TASK=\"REMOVE_TASK\";\r\nexport const UPDATE_TASK=\"UPDATE_TASK\";","import React,{useState} from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\n\r\nfunction InputTask({handleAddTask}){\r\n    let [inputName,setInputName]=useState('');\r\n\r\n    function handleChange(event){\r\n        setInputName(event.target.value);\r\n    }\r\n\r\n    function saveTask(){\r\n        let task={id:1,name:inputName,state:false}\r\n        handleAddTask(task);\r\n        setInputName('');\r\n    }\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.key === \"Enter\") {\r\n          saveTask();\r\n        }\r\n      };\r\n\r\n \r\n    return(\r\n        <Wrapper>\r\n        <div className=\"form-container\">\r\n          <div className=\"task-status\" onClick={saveTask}>\r\n            <div className=\"task-uncheck\" ></div>\r\n          </div>\r\n            <form onSubmit={event=>{event.preventDefault()}}>\r\n              <input type=\"text\" id=\"task-input\" placeholder=\"Create a new todo...\" \r\n              value={inputName} onChange={handleChange}\r\n              onKeyDown={handleKeyDown}/>\r\n            </form>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      handleAddTask: (task) =>\r\n        dispatch({ type: taskTypes.ADD_TASK, payload: task })\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(InputTask);","import React from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport moon from \"../images/icon-moon.svg\";\r\nimport sun from \"../images/icon-sun.svg\";\r\nimport InputTask from './InputTask';\r\n\r\n\r\n\r\nexport default function Header({setDarkMode,darkMode}){\r\n    function handleClickDarkMode() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n\r\n    return(\r\n        <header className=\"header\">\r\n        <Wrapper>\r\n          <div className=\"title-container\">\r\n            <h3 className=\"title\">TODO</h3>\r\n            <div className=\"icon-color-mode pointer\" onClick={handleClickDarkMode}>\r\n              <img src={moon} alt=\"icon moon\" id=\"icon-moon\"/> \r\n              <img src={sun} alt=\"icon moon\" id=\"icon-sun\"/>  \r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        \r\n    \r\n<InputTask />\r\n      </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function TaskActions(){\r\n    return(<div className=\"task-element\">\r\n    <div id=\"option-five-items\" className=\"task-detail pointer\">5 Items</div>\r\n    <div className=\"task-detail pointer\">clear Completed</div>\r\n  </div>)\r\n}","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from 'react';\r\nimport cross from \"../images/icon-cross.svg\";\r\nimport check from \"../images/icon-check.svg\";\r\n\r\n\r\nexport default function TaskElement({task}){\r\n    let taskStatus=task.status?'check':'uncheck';\r\n    return (\r\n        <div className={\"task-element \"+taskStatus} draggable=\"true\">\r\n        <div className=\"task-status pointer\">\r\n          <div className=\"task-status__icon\" >\r\n            <img src={check} alt=\"icon check\"/>\r\n             </div>\r\n        </div>\r\n        <div className=\"task-main\">\r\n          <span className=\"task-name\">{task.name}</span>\r\n        </div>\r\n        \r\n        <div className=\"task-delete pointer\">\r\n          <img  src={cross} alt=\"icon delete\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React from 'react';\r\nimport TaskActions from './TaskActions';\r\nimport TaskElement from './TaskElement';\r\nimport Wrapeer from './Wrapper';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ListTask({tasks}){\r\n\r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"main__list-task\">\r\n            {\r\n                tasks.map((task,idx)=>(\r\n                    <TaskElement key={idx} task={task}/>\r\n                ))\r\n            }\r\n            <TaskActions/>            \r\n          </div>\r\n        </Wrapeer>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.taskReducer.tasks\r\n  };\r\n};\r\n\r\n  export default connect(mapStateToProps)(ListTask);","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\n\r\nexport default function Filters(){\r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"filters\">\r\n                <div className=\"filter-element pointer active\">All</div>\r\n                <div className=\"filter-element pointer\">Active</div>\r\n                <div className=\"filter-element pointer\">Completed</div>\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\n\r\nexport default function Instruction(){\r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"instruction\">\r\n                Drag and drop to reorder list\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}","import * as types from '../types/taskTypes';\r\nconst initialState={\r\n    tasks:[\r\n        {name:\"leer 1 hora\",status:true},\r\n        {name:\"leer 1 hora\",status:false},\r\n        {name:\"leer 1 hora\",status:true},\r\n        {name:\"leer 1 hora\",status:false},\r\n        {name:\"leer 1 hora\",status:false},\r\n    ]\r\n}\r\n\r\nexport const taskReducer = (state=initialState,action)=>{\r\nswitch(action.type){\r\n    case types.ADD_TASK:{\r\n        return {...state,tasks:[...state.tasks,action.payload]};\r\n    }\r\n    default:{\r\n        return state;\r\n    }\r\n}\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport {taskReducer} from './taskReducer';\r\n\r\nexport default combineReducers({\r\n  taskReducer\r\n});","import {useState,useEffect} from \"react\";\nimport Header from './components/Header';\nimport ListTask from './components/ListTask';\nimport Filters from  './components/Filters';\nimport Instruction from './components/Instruction';\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducers\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\n  function changeMedia(mq){\n    setDarkMode(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  \n  return (\n    <div>\n      <Provider store={store}>\n        <main className={mainClass}>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode}/>\n          <ListTask />\n          <Filters/>\n          <Instruction />\n        </main>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}