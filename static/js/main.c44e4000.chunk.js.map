{"version":3,"sources":["components/Wrapper.jsx","images/icon-moon.svg","images/icon-sun.svg","store/types/taskTypes.js","components/InputTask.jsx","services/IdGenerator.js","components/Header.jsx","components/TaskActions.jsx","images/icon-cross.svg","images/icon-check.svg","components/TaskElement.jsx","components/ListTask.jsx","services/filterTasks.js","components/Filters.jsx","components/Instruction.jsx","store/reducers/taskReducer.js","store/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapeer","children","className","ADD_TASK","REMOVE_TASK","UPDATE_TASK","REMOVE_COMPLETED_TASK","CHANGE_FILTER","CHANGE_TASKS_VISIBLE","idGenerador","uuidv4","connect","dispatch","handleAddTask","task","type","taskTypes","payload","useState","inputName","setInputName","saveTask","id","generate","name","status","onClick","onSubmit","event","preventDefault","placeholder","value","onChange","target","onKeyDown","key","Header","setDarkMode","darkMode","src","moon","alt","sun","state","totalTaskVisible","taskReducer","handleRemoveCompleted","taskAction","handleRemoveTask","handleUpdateTask","taskStatus","draggable","newTask","check","cross","filterTask","tasks","undefined","filter","handleChangeTotalTaskVisible","tasksVisible","length","map","idx","handleFilterAll","handleFilterCompleted","handleFilterActive","Instruction","initialState","combineReducers","action","types","newTasks","store","createStore","reducer","App","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44e4000.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Wrapeer({children}){\r\n    return(\r\n        <div className=\"wrapper\">{children}</div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export const ADD_TASK=\"ADD_TASK\";\r\nexport const REMOVE_TASK=\"REMOVE_TASK\";\r\nexport const UPDATE_TASK=\"UPDATE_TASK\";\r\nexport const REMOVE_COMPLETED_TASK=\"REMOVE_COMPLETED_TASK\";\r\nexport const CHANGE_FILTER=\"CHANGE_FILTER\";\r\nexport const CHANGE_TASKS_VISIBLE=\"CHANGE_TASKS_VISIBLE\";","import React,{useState} from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\nimport IdGenerator from '../services/IdGenerator';\r\n\r\nlet idGenerador=new IdGenerator();\r\n\r\nfunction InputTask({handleAddTask}){\r\n    let [inputName,setInputName]=useState('');\r\n\r\n    function handleChange(event){\r\n        setInputName(event.target.value);\r\n    }\r\n\r\n    function saveTask(){\r\n      if(inputName!==\"\"){\r\n        let task={id:idGenerador.generate(),name:inputName,status:false}\r\n        handleAddTask(task);\r\n        setInputName('');\r\n      }\r\n    }\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.key === \"Enter\") {\r\n          saveTask();\r\n        }\r\n      };\r\n\r\n \r\n    return(\r\n        <Wrapper>\r\n        <div className=\"form-container\">\r\n          <div className=\"task-status\" onClick={saveTask}>\r\n            <div className=\"task-uncheck\" ></div>\r\n          </div>\r\n            <form onSubmit={event=>{event.preventDefault()}}>\r\n              <input type=\"text\" id=\"task-input\" placeholder=\"Create a new todo...\" \r\n              value={inputName} onChange={handleChange}\r\n              onKeyDown={handleKeyDown}/>\r\n            </form>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      handleAddTask: (task) =>\r\n        dispatch({ type: taskTypes.ADD_TASK, payload: task })\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(InputTask);","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass IdGenerator{\r\n    generate(){\r\n        return uuidv4(); \r\n    }\r\n}\r\n\r\nexport default IdGenerator;","import React from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nimport moon from \"../images/icon-moon.svg\";\r\nimport sun from \"../images/icon-sun.svg\";\r\nimport InputTask from './InputTask';\r\n\r\n\r\n\r\nexport default function Header({setDarkMode,darkMode}){\r\n    function handleClickDarkMode() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n\r\n    return(\r\n        <header className=\"header\">\r\n        <Wrapper>\r\n          <div className=\"title-container\">\r\n            <h3 className=\"title\">TODO</h3>\r\n            <div className=\"icon-color-mode pointer\" onClick={handleClickDarkMode}>\r\n              <img src={moon} alt=\"icon moon\" id=\"icon-moon\"/> \r\n              <img src={sun} alt=\"icon moon\" id=\"icon-sun\"/>  \r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        \r\n    \r\n<InputTask />\r\n      </header>\r\n    )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as taskAction from '../store/types/taskTypes';\r\n\r\nfunction TaskActions({handleRemoveCompleted,totalTaskVisible}){\r\n    return(<div className=\"task-element\">\r\n    <div id=\"option-five-items\" className=\"task-detail pointer\">{totalTaskVisible} Items</div>\r\n    <div className=\"task-detail pointer\" onClick={handleRemoveCompleted}>clear Completed</div>\r\n  </div>)\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    totalTaskVisible:state.taskReducer.totalTaskVisible\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    handleRemoveCompleted:()=>dispatch({type:taskAction.REMOVE_COMPLETED_TASK})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskActions);\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from 'react';\r\nimport cross from \"../images/icon-cross.svg\";\r\nimport check from \"../images/icon-check.svg\";\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\n\r\n\r\nfunction TaskElement({task,handleRemoveTask,handleUpdateTask}){\r\n    let taskStatus=task.status?'check':'uncheck';\r\n\r\n    function handleClickUpdate(){\r\n      let newTask={...task};\r\n      newTask.status=!newTask.status;\r\n      handleUpdateTask(newTask);\r\n    }\r\n    function handleClickRemove(){\r\n      handleRemoveTask(task.id);\r\n    }\r\n    return (\r\n        <div className={\"task-element \"+taskStatus} draggable=\"true\">\r\n        <div className=\"task-status pointer\" onClick={handleClickUpdate}>\r\n          <div className=\"task-status__icon\" >\r\n            <img src={check} alt=\"icon check\"/>\r\n             </div>\r\n        </div>\r\n        <div className=\"task-main\">\r\n          <span className=\"task-name\">{task.name}</span>\r\n        </div>\r\n        \r\n        <div className=\"task-delete pointer\" onClick={handleClickRemove}>\r\n          <img  src={cross} alt=\"icon delete\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleRemoveTask: (id) =>\r\n      dispatch({ type: taskTypes.REMOVE_TASK, payload: id }),\r\n    handleUpdateTask: (task) =>\r\n      dispatch({ type: taskTypes.UPDATE_TASK, payload: task })\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(TaskElement);","import React from 'react';\r\nimport TaskActions from './TaskActions';\r\nimport TaskElement from './TaskElement';\r\nimport Wrapeer from './Wrapper';\r\nimport { connect } from \"react-redux\";\r\nimport FilterTasks from '../services/filterTasks';\r\nimport * as taskTypes from '../store/types/taskTypes'; \r\n\r\nlet filterTask=new FilterTasks();\r\n\r\nfunction ListTask({tasks,filter,handleChangeTotalTaskVisible}){\r\n  \r\n  let tasksVisible=filterTask.filter(tasks,filter);\r\n  handleChangeTotalTaskVisible(tasksVisible.length);\r\n\r\n    return(\r\n        <Wrapeer>\r\n          {\r\n            tasksVisible.length>0?(\r\n\r\n            <div className=\"main__list-task\">\r\n            {\r\n                tasksVisible.map((task,idx)=>(\r\n                    <TaskElement key={idx} task={task}/>\r\n                ))\r\n            }\r\n            <TaskActions/>            \r\n          </div>\r\n            ):\r\n            <div className=\"tasks-empty\">\r\n              Add new Task\r\n            </div>\r\n          }\r\n        </Wrapeer>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.taskReducer.tasks,\r\n    filter:state.taskReducer.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n  return {\r\n    handleChangeTotalTaskVisible:(totalTaskVisible)=>dispatch({type:taskTypes.CHANGE_TASKS_VISIBLE,payload:totalTaskVisible})\r\n  }\r\n}\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(ListTask);","export default class FilterTasks{\r\n    filter(tasks,status){\r\n        if(status===undefined){\r\n            return tasks;\r\n        }   \r\n        return tasks.filter(task=>task.status===status);\r\n    }\r\n}","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\nimport {connect} from 'react-redux';\r\nimport * as taskTypes from '../store/types/taskTypes';\r\n\r\nfunction Filters({filter,handleFilterActive,handleFilterAll,handleFilterCompleted}){\r\n   \r\n    \r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"filters\">\r\n                <div className={`filter-element pointer ${filter===undefined?\"active\":\"\"}`} onClick={handleFilterAll}>All</div>\r\n                <div className={`filter-element pointer ${filter===false?\"active\":\"\"}`}  onClick={handleFilterActive}>Active</div>\r\n                <div className={`filter-element pointer ${filter===true?\"active\":\"\"}`} onClick={handleFilterCompleted}>Completed</div>\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{ \r\n        filter:state.taskReducer.filter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleFilterAll:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:undefined}),\r\n        handleFilterCompleted:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:true}),\r\n        handleFilterActive:()=>dispatch({type:taskTypes.CHANGE_FILTER,payload:false}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filters);","import React from 'react';\r\nimport Wrapeer from './Wrapper';\r\n\r\nexport default function Instruction(){\r\n    return(\r\n        <Wrapeer>\r\n            <div className=\"instruction\">\r\n                Drag and drop to reorder list\r\n            </div>\r\n        </Wrapeer>\r\n    )\r\n}","import * as types from '../types/taskTypes';\r\nconst initialState={\r\n    tasks:[],\r\n    filter:undefined,\r\n    totalTaskVisible:0\r\n}\r\n\r\nexport const taskReducer = (state=initialState,action)=>{\r\nswitch(action.type){\r\n    case types.ADD_TASK:{\r\n        return {...state,tasks:[...state.tasks,action.payload]};\r\n    }\r\n    case types.REMOVE_TASK:{\r\n        let newTasks=state.tasks.filter(task=>task.id!==action.payload);\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.UPDATE_TASK:{\r\n        let newTasks=state.tasks.map(task=>{\r\n            if(task.id===action.payload.id){\r\n                return action.payload\r\n            }\r\n            return task;\r\n        })\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.REMOVE_COMPLETED_TASK:{\r\n        let newTasks=state.tasks.filter(task=>!task.status);\r\n        return {...state,tasks:newTasks};\r\n    }\r\n    case types.CHANGE_FILTER:{\r\n        return {...state,filter:action.payload}\r\n    }\r\n    case types.CHANGE_TASKS_VISIBLE:{\r\n        return {...state,totalTaskVisible:action.payload}\r\n    }\r\n    default:{\r\n        return state;\r\n    }\r\n}\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport {taskReducer} from './taskReducer';\r\n\r\nexport default combineReducers({\r\n  taskReducer\r\n});","import {useState,useEffect} from \"react\";\nimport Header from './components/Header';\nimport ListTask from './components/ListTask';\nimport Filters from  './components/Filters';\nimport Instruction from './components/Instruction';\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducers\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\n  function changeMedia(mq){\n    setDarkMode(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  \n  return (\n    <div>\n      <Provider store={store}>\n        <main className={mainClass}>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode}/>\n          <ListTask />\n          <Filters/>\n          <Instruction />\n        </main>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}